// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id         Int      @id @default(autoincrement())
  username   String   @unique
  password   String 
  firstName  String
  lastName   String
  email String
  contests_participated UserContests[]
  rating_changed Int[]
  submissions SubmissionQuestion[]
}

// Joining table
model UserContests{
  userId Int
  user User @relation(fields: [userId], references: [id])
  contestId Int
  contest Contest @relation(fields: [contestId], references: [id])
  @@id([userId, contestId])

}

model Question{
  id Int @id @default(autoincrement())
  title String
  description String
  testCases String
  checker String
  contestId Int
  contest Contest @relation(fields: [contestId], references: [id])
  submittedby SubmissionQuestion[]
}

model Contest{
  id Int @id @default(autoincrement())
  questions Question[]
  participants UserContests[]
  duration Int[]
  start_time DateTime
  end_time DateTime
}

model SubmissionQuestion{
  userId Int
  user User @relation(fields: [userId], references: [id])
  verdict Boolean
  time DateTime @default(now())
  questionId Int
  question Question @relation(fields: [questionId], references: [id])
  @@id([userId, questionId])
}
